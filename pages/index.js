import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import React, { useState, useEffect } from "react";

export default function Home(props) {
  const [form, updateForm] = useState({
    title: "",
    hashedSecret: "",
    userId: "",
  });
  const inputChangeHandler = (e) => {
    let inId = e.target.id;
    let value = e.target.value;
    switch (inId) {
      case "title":
        updateForm((oldForm) => {
          return { ...oldForm, title: value };
        });
        break;
      case "secret":
        updateForm((oldForm) => {
          return { ...oldForm, hashedSecret: value };
        });
        break;
      case "userId":
        updateForm((oldForm) => {
          return { ...oldForm, userId: value };
        });
        break;
      default:
        break;
    }
    console.log(form);
  };

  const addRecord = (e) => {
    e.preventDefault();
    const requestOptions = {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ form }),
    };
    fetch("http://localhost:3000/api/secrets", requestOptions)
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        updateForm({
          title: "",
          hashedSecret: "",
          userId: "",
        });
      });
  };

  // function addRecord() {
  //   useEffect(() => {
  //     // POST request using fetch inside useEffect React hook
  //     const requestOptions = {
  //       method: "POST",
  //       headers: { "Content-Type": "application/json" },
  //       body: JSON.stringify({}),
  //     };
  //     fetch("http://localhost:3000/api/secrets", requestOptions)
  //       .then((response) => response.json())
  //       .then((data) => setPostId(data.id));

  //     // empty dependency array means this effect will only run once (like componentDidMount in classes)
  //   }, []);
  // }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing <code className={styles.code}>pages/index.js</code>
        </p>
        <p>{props.value}</p>
        <form>
          <label htmlFor="title">Title:</label>
          <input type="text" value={form.title} name="title" id="title" onChange={inputChangeHandler} />
          <label htmlFor="secret">Secret:</label>
          <input type="text" value={form.hashedSecret} name="secret" id="secret" onChange={inputChangeHandler} />
          <label htmlFor="userId">User ID:</label>
          <input type="text" value={form.userId} name="userId" id="userId" onChange={inputChangeHandler} />
          <input type="button" value="Add" onClick={addRecord} />
        </form>
      </main>

      <footer className={styles.footer}>
        <a href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app" target="_blank" rel="noopener noreferrer">
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export const getStaticProps = async () => {
  const res = await fetch("http://localhost:3000/api/secrets", {
    "Content-Type": "application/json",
  });
  const posts = await res.json();
  console.log(posts);
  return {
    props: {
      value: posts.data[0].title || null,
    },
  };
};
